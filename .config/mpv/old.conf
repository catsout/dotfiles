#youtubedlytdl-format="bestvideo[height<=?1200]+bestaudio"


#————————————————————窗口——————————————————————
geometry=50%:50%
autofit-larger=70%x60%

#————————————————————杂项——————————————————————
# 记忆上次播放的位置 wather-later文件夹
save-position-on-quit
watch-later-directory="/tmp/mpv/watch_later"
demuxer-max-bytes=80MiB

# log
#log-file="~/Desktop/mpv.log"
#————————————————————视频相关——————————————————————
# 解码
hwdec=vaapi

# 高优先级
#priority=high

#默认profile
#profile=gpu-hq
# gpu-hq contains:
#    scale=spline36
#    cscale=spline36
#    dscale=mitchell
#    dither-depth=auto
#    correct-downscaling=yes
#    linear-downscaling=yes
#    sigmoid-upscaling=yes
#    deband=yes

# gpu-api
vo=gpu
gpu-api=opengl
gpu-context=auto

# may help with 4K videos
vd-lavc-dr=yes  # Enable direct rendering
#opengl-pbo=yes

# AVsync
#video-sync=display-resample
#vulkan-swap-mode=fifo
video-sync-max-video-change=5

temporal-dither
dither-size-fruit=6 # 默认6。会稍微延缓mpv启动

# smooth motion
#interpolation

# interpolation使用的算法。详见https://mpv.io/manual/master/#options-tscale
# 一些讨论见 https://github.com/mpv-player/mpv/issues/2685
# 目前的默认为mitchell。总体而言mitchell更平滑（当然不好和SVP插帧比），但会有模糊。oversample没有模糊，但不平滑（基本还原24帧的样子）
# 具体选择哪个请依据自身需求来
#tscale=oversample


#icc校色
icc-profile="~/.config/N140HCE_EN2.icm"
#icc-3dlut-size=64x64x64 # 默认64x64x64。256x256x256会稍微延缓mpv启动,并且高内存占用
icc-cache-dir="/tmp/mpv/icc_cache"
icc-contrast=1000

# 在mpv.conf所在目录下建一个 shaders_cache 空文件夹，以存放编译好的GPU shaders，加速启动。
# 注意！如果不放APPDATA下，确保该文件夹有用户写入权限。
#gpu-shader-cache-dir="/home/out/.config/mpv/shaders_cache"

# 播放结束后不退出
keep-open=yes

ontop # combined with fullscreen, likely to enter fullscreen exclusive mode
# 特别对于vulkan，使用ontop容易让驱动选择进入独占全屏。d3d11需要额外的选项，等https://github.com/mpv-player/mpv/pull/6329实现

# autospeed-spause=4 自动暂停的时间，秒为单位

# WASAPI音频输出（Windows）
# 其他系统请相应更改音频输出方式
ao=pulse
audio-exclusive=no  # 独占音频。不希望其他程序没声音则去掉。
#audio-delay=0.04 # 如需要，可设置音频延迟
# 强制resample成96kHz，24bit（需要音频设备硬件支持）。注意！并非必要！
#audio-samplerate=96000
#audio-format=s32

# 如果双声道系统播放多声道影片时有的声道声音没出现，尝试强制设定为双声道
audio-channels=stereo
# 规格化：
audio-normalize-downmix=yes
# 多声道音轨downmix成双声道时，如果觉得背景音过响，角色台词声音小，尝试看看这个：https://github.com/mpv-player/mpv/issues/6563

sub-auto=fuzzy
sub-file-paths=subs
slang=chi,zh-CN,sc,chs
#sid=1
# 字幕显示出来和xy-subfilter不一样？尝试启用下面的设置
#sub-ass-vsfilter-aspect-compat=no   # 关乎字幕是否随视频拉伸
#sub-ass-vsfilter-blur-compat=no   # 关乎字幕模糊的设定
# 即使都用上了也不一致？那不是这两个选项的问题，重新注释掉这两行，回帖问吧。（多半是vsfilter/libass其中一个的bug）

audio-file-auto=fuzzy
#audio-file-paths=audio
alang=jpn,ja,eng,en
#aid=1
# 暂时无法根据其他的metadata选择轨道，mpv又默认偏好外挂轨道，常常选到我不想要的音轨
# 有类似情况的话就用aid=1始终选择第一条音轨再自己手动调吧
# 设计者也是这么推荐的：https://github.com/mpv-player/mpv/issues/967#issuecomment-94744964

screenshot-format=png
screenshot-tag-colorspace=yes
screenshot-high-bit-depth=yes
screenshot-png-compression=1
screenshot-png-filter=0



[intel]
hwdec=vaapi
vo=vaapi
vo-vaapi-scaling=hq
## 根据视频是否是HDR以及视频aspect ratio决定是否启用blend-subtitles的profile
## 目前HDR->SDR建议关闭blend-subtitles，见https://github.com/mpv-player/mpv/issues/6368
## 如果hdr-compute-peak将来继续改进可能可以兼容blend-subtitles
[HDR_or_21:9]
profile-desc=cond:(p["video-params/primaries"]=="bt.2020" or p["video-params/aspect"]>=2.0)
#blend-subtitles=no
sub-ass-force-margins=yes # 使字幕输出在黑边上
#
[SDR_and_16:9]
profile-desc=cond:(p["video-params/primaries"]~="bt.2020" and p["video-params/aspect"]<2.0)
#blend-subtitles=yes
sub-ass-force-margins=no
#
## 以下根据分辨率和视频帧率设置不同的升/降阶算法，以期获得在能不掉帧的情况下达到最好的效果
#
## 创建一个基于gpu-hq，用于将一些参数回归到默认的profile：
[high_quality]
profile=gpu-hq
#fbo-format=rgba32f 
#
### 1080 / 16 * 9 = 607.5
#[SD] # 480p 576p
#profile-desc=cond:((p["video-params/w"]<1080 and p["video-params/h"]<608) and (p["video-params/w"]>678 or p["video-params/h"]>381))
#profile=high_quality
#
### 1080 * 1.414213 / 2 = 763.7
#[HD30] # 640p 720p 30fps
#profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608) and p["estimated-vf-fps"]<31)
#profile=high_quality
#glsl-shaders-clr
#
##[HD60] # 640p 720p 60fps
#profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608) and p["estimated-vf-fps"]>=31)
#profile=high_quality
#glsl-shaders-clr
#scale=ewa_lanczossharp
#
[RAVU] # 另一个profile的例子
profile=high_quality
glsl-shaders-clr
#
[FHD] # 1080p
profile-desc=cond:((p["video-params/w"]<=1920 and p["video-params/h"]<=1080) and (p["video-params/w"]>=1358 or p["video-params/h"]>=764) and p["estimated-vf-fps"]<31)
profile=RAVU
#
[FHD60] # 1080p 60fps
profile-desc=cond:((p["video-params/w"]<=1920 and p["video-params/h"]<=1080) and (p["video-params/w"]>=1358 or p["video-params/h"]>=764) and p["estimated-vf-fps"]>=31)
profile=RAVU
#
##[2K30] # 1440p
##profile-desc=cond:((p["video-params/w"]<=2560 and p["video-params/h"]<=1440) and (p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]<31)
##profile=RAVU
##
### 4K videos
##[4K30] # low fps: use SSIM to downscale
##profile-desc=cond:((p["video-params/w"]>2560 or p["video-params/h"]>1440) and p["estimated-vf-fps"]<31)
##profile=high_quality
##glsl-shaders-clr
##glsl-shaders-append="~~/shaders/SSimDownscaler.glsl"
##correct-downscaling=no # SSimDownscaler要求。需要在其他profile中重新设为yes（通过重新设定一遍profile=gpu-hq）。
##
[UHD60] # high fps: use no glsl-shaders
profile-desc=cond:((p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]>=31)
glsl-shaders-clr
### 如果是1080p屏幕播放4K，可以使用https://gist.github.com/bjin/15f307e7a1bdb55842bbb663ee1950ed
### glsl-shaders-append="~~/shaders/acme-0.5x.hook"
### 可以绕过chroma upscaling，并且把之后颜色转换的计算量从4K级降到1080p级。
cscale=bilinear
scale=bilinear
dscale=bilinear
deband=no  # 关闭deband，降低计算量
dither-depth=no  # 关闭抖动，降低计算量
correct-downscaling=no  # 降低计算量
fbo-format=auto
